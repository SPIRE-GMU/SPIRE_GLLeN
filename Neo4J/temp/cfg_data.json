{
    "/home/spire2/SPIRE_GLLeN/Neo4J/temp/powers_loop.cfg": {
        "function_node": {
            "function_id": "main-2923ef11",
            "function_name": "main",
            "full_code": "\n;; Function main (main, funcdef_no=0, decl_uid=2344, cgraph_uid=1, symbol_order=0)\n\nRemoving basic block 7\nMerging blocks 5 and 6\n;; 2 loops found\n;;\n;; Loop 0\n;;  header 0, latch 1\n;;  depth 0, outer -1\n;;  nodes: 0 1 2 3 4 5 6\n;;\n;; Loop 1\n;;  header 4, latch 3\n;;  depth 1, outer 0\n;;  nodes: 4 3\n;; 2 succs { 4 }\n;; 3 succs { 4 }\n;; 4 succs { 3 5 }\n;; 5 succs { 6 }\n;; 6 succs { 1 }\nint main ()\n{\nlong double result;\nint exp;\nint base;\nint D.2353;\n\n<bb 2> :\nresult = 1.0e+0;\nprintf (\"Enter a base number: \");\nscanf (\"%d\", &base);\nprintf (\"Enter an exponent: \");\nscanf (\"%d\", &exp);\ngoto <bb 4>; [INV]\n\n<bb 3> :\nbase.0_1 = base;\n_2 = (long double) base.0_1;\nresult = result * _2;\nexp.1_3 = exp;\n_4 = exp.1_3 + -1;\nexp = _4;\n\n<bb 4> :\nexp.2_5 = exp;\nif (exp.2_5 != 0)\ngoto <bb 3>; [INV]\nelse\ngoto <bb 5>; [INV]\n\n<bb 5> :\nprintf (\"Answer = %.0Lf\", result);\nD.2353 = 0;\nbase = {CLOBBER};\nexp = {CLOBBER};\n\n<bb 6> :\n<L4>:\nreturn D.2353;\n\n}\n\n\n"
        },
        "basic_blocks": {
            "main-2923ef11-bb-2": {
                "block_id": "main-2923ef11-bb-2",
                "block_code": "<bb 2> :\nresult = 1.0e+0;\nprintf (\"Enter a base number: \");\nscanf (\"%d\", &base);\nprintf (\"Enter an exponent: \");\nscanf (\"%d\", &exp);\ngoto <bb 4>; [INV]\n\n",
                "instructions": [
                    "result = 1.0e+0;",
                    "printf (\"Enter a base number: \");",
                    "scanf (\"%d\", &base);",
                    "printf (\"Enter an exponent: \");",
                    "scanf (\"%d\", &exp);",
                    "goto <bb 4>; [INV]",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            },
            "main-2923ef11-bb-3": {
                "block_id": "main-2923ef11-bb-3",
                "block_code": "<bb 3> :\nbase.0_1 = base;\n_2 = (long double) base.0_1;\nresult = result * _2;\nexp.1_3 = exp;\n_4 = exp.1_3 + -1;\nexp = _4;\n\n",
                "instructions": [
                    "base.0_1 = base;",
                    "_2 = (long double) base.0_1;",
                    "result = result * _2;",
                    "exp.1_3 = exp;",
                    "_4 = exp.1_3 + -1;",
                    "exp = _4;",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            },
            "main-2923ef11-bb-4": {
                "block_id": "main-2923ef11-bb-4",
                "block_code": "<bb 4> :\nexp.2_5 = exp;\nif (exp.2_5 != 0)\ngoto <bb 3>; [INV]\nelse\ngoto <bb 5>; [INV]\n\n",
                "instructions": [
                    "exp.2_5 = exp;",
                    "if (exp.2_5 != 0)",
                    "goto <bb 3>; [INV]",
                    "else",
                    "goto <bb 5>; [INV]",
                    ""
                ],
                "contains_decision": true,
                "is_loop_header": true,
                "successors": []
            },
            "main-2923ef11-bb-5": {
                "block_id": "main-2923ef11-bb-5",
                "block_code": "<bb 5> :\nprintf (\"Answer = %.0Lf\", result);\nD.2353 = 0;\nbase = {CLOBBER};\nexp = {CLOBBER};\n\n",
                "instructions": [
                    "printf (\"Answer = %.0Lf\", result);",
                    "D.2353 = 0;",
                    "base = {CLOBBER};",
                    "exp = {CLOBBER};",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            },
            "main-2923ef11-bb-6": {
                "block_id": "main-2923ef11-bb-6",
                "block_code": "<bb 6> :\n<L4>:\nreturn D.2353;\n\n}\n\n\n",
                "instructions": [
                    "<L4>:",
                    "return D.2353;",
                    "",
                    "}",
                    "",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            }
        },
        "loops": [
            {
                "loop_id": "main-2923ef11-loop-0",
                "header": 0,
                "latch": null,
                "depth": 0,
                "nodes": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6
                ]
            },
            {
                "loop_id": "main-2923ef11-loop-1",
                "header": 4,
                "latch": null,
                "depth": 1,
                "nodes": [
                    4,
                    3
                ]
            }
        ],
        "decision_nodes": [
            {
                "decision_id": "main-2923ef11-decision-891b7093",
                "block_id": "main-2923ef11-bb-4",
                "condition": "if (exp.2_5 != 0)",
                "true_target": null,
                "false_target": null
            }
        ],
        "edges": [
            {
                "from": "main-2923ef11-bb-2",
                "to": "main-2923ef11-bb-4"
            },
            {
                "from": "main-2923ef11-bb-3",
                "to": "main-2923ef11-bb-4"
            },
            {
                "from": "main-2923ef11-bb-4",
                "to": "main-2923ef11-bb-3"
            },
            {
                "from": "main-2923ef11-bb-4",
                "to": "main-2923ef11-bb-5"
            },
            {
                "from": "main-2923ef11-bb-5",
                "to": "main-2923ef11-bb-6"
            },
            {
                "from": "main-2923ef11-bb-6",
                "to": "main-2923ef11-bb-1"
            }
        ]
    },
    "/home/spire2/SPIRE_GLLeN/Neo4J/temp/quotient_remainder.cfg": {
        "function_node": {
            "function_id": "main-d612fc5b",
            "function_name": "main",
            "full_code": "\n;; Function main (main, funcdef_no=0, decl_uid=2344, cgraph_uid=1, symbol_order=0)\n\nRemoving basic block 4\nMerging blocks 2 and 3\n;; 1 loops found\n;;\n;; Loop 0\n;;  header 0, latch 1\n;;  depth 0, outer -1\n;;  nodes: 0 1 2 3\n;; 2 succs { 3 }\n;; 3 succs { 1 }\nint main ()\n{\nint remainder;\nint quotient;\nint divisor;\nint dividend;\nint D.2351;\n\n<bb 2> :\nprintf (\"Enter dividend: \");\nscanf (\"%d\", &dividend);\nprintf (\"Enter divisor: \");\nscanf (\"%d\", &divisor);\ndividend.0_1 = dividend;\ndivisor.1_2 = divisor;\nquotient = dividend.0_1 / divisor.1_2;\ndividend.2_3 = dividend;\ndivisor.3_4 = divisor;\nremainder = dividend.2_3 % divisor.3_4;\nprintf (\"Quotient = %d\\n\", quotient);\nprintf (\"Remainder = %d\", remainder);\nD.2351 = 0;\ndividend = {CLOBBER};\ndivisor = {CLOBBER};\n\n<bb 3> :\n<L1>:\nreturn D.2351;\n\n}\n\n\n"
        },
        "basic_blocks": {
            "main-d612fc5b-bb-2": {
                "block_id": "main-d612fc5b-bb-2",
                "block_code": "<bb 2> :\nprintf (\"Enter dividend: \");\nscanf (\"%d\", &dividend);\nprintf (\"Enter divisor: \");\nscanf (\"%d\", &divisor);\ndividend.0_1 = dividend;\ndivisor.1_2 = divisor;\nquotient = dividend.0_1 / divisor.1_2;\ndividend.2_3 = dividend;\ndivisor.3_4 = divisor;\nremainder = dividend.2_3 % divisor.3_4;\nprintf (\"Quotient = %d\\n\", quotient);\nprintf (\"Remainder = %d\", remainder);\nD.2351 = 0;\ndividend = {CLOBBER};\ndivisor = {CLOBBER};\n\n",
                "instructions": [
                    "printf (\"Enter dividend: \");",
                    "scanf (\"%d\", &dividend);",
                    "printf (\"Enter divisor: \");",
                    "scanf (\"%d\", &divisor);",
                    "dividend.0_1 = dividend;",
                    "divisor.1_2 = divisor;",
                    "quotient = dividend.0_1 / divisor.1_2;",
                    "dividend.2_3 = dividend;",
                    "divisor.3_4 = divisor;",
                    "remainder = dividend.2_3 % divisor.3_4;",
                    "printf (\"Quotient = %d\\n\", quotient);",
                    "printf (\"Remainder = %d\", remainder);",
                    "D.2351 = 0;",
                    "dividend = {CLOBBER};",
                    "divisor = {CLOBBER};",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            },
            "main-d612fc5b-bb-3": {
                "block_id": "main-d612fc5b-bb-3",
                "block_code": "<bb 3> :\n<L1>:\nreturn D.2351;\n\n}\n\n\n",
                "instructions": [
                    "<L1>:",
                    "return D.2351;",
                    "",
                    "}",
                    "",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            }
        },
        "loops": [
            {
                "loop_id": "main-d612fc5b-loop-0",
                "header": 0,
                "latch": null,
                "depth": 0,
                "nodes": [
                    0,
                    1,
                    2,
                    3
                ]
            }
        ],
        "decision_nodes": [],
        "edges": [
            {
                "from": "main-d612fc5b-bb-2",
                "to": "main-d612fc5b-bb-3"
            },
            {
                "from": "main-d612fc5b-bb-3",
                "to": "main-d612fc5b-bb-1"
            }
        ]
    },
    "/home/spire2/SPIRE_GLLeN/Neo4J/temp/fibonacci.cfg": {
        "function_node": {
            "function_id": "main-6c193a21",
            "function_name": "main",
            "full_code": "\n;; Function main (main, funcdef_no=0, decl_uid=2344, cgraph_uid=1, symbol_order=0)\n\nRemoving basic block 7\nMerging blocks 5 and 6\n;; 2 loops found\n;;\n;; Loop 0\n;;  header 0, latch 1\n;;  depth 0, outer -1\n;;  nodes: 0 1 2 3 4 5 6\n;;\n;; Loop 1\n;;  header 4, latch 3\n;;  depth 1, outer 0\n;;  nodes: 4 3\n;; 2 succs { 4 }\n;; 3 succs { 4 }\n;; 4 succs { 3 5 }\n;; 5 succs { 6 }\n;; 6 succs { 1 }\nint main ()\n{\nint nextTerm;\nint t2;\nint t1;\nint n;\nint i;\nint D.2356;\n\n<bb 2> :\nt1 = 0;\nt2 = 1;\nnextTerm = t1 + t2;\nprintf (\"Enter the number of terms: \");\nscanf (\"%d\", &n);\nprintf (\"Fibonacci Series: %d, %d, \", t1, t2);\ni = 3;\ngoto <bb 4>; [INV]\n\n<bb 3> :\nprintf (\"%d, \", nextTerm);\nt1 = t2;\nt2 = nextTerm;\nnextTerm = t1 + t2;\ni = i + 1;\n\n<bb 4> :\nn.0_1 = n;\nif (i <= n.0_1)\ngoto <bb 3>; [INV]\nelse\ngoto <bb 5>; [INV]\n\n<bb 5> :\nD.2356 = 0;\nn = {CLOBBER};\n\n<bb 6> :\n<L4>:\nreturn D.2356;\n\n}\n\n\n"
        },
        "basic_blocks": {
            "main-6c193a21-bb-2": {
                "block_id": "main-6c193a21-bb-2",
                "block_code": "<bb 2> :\nt1 = 0;\nt2 = 1;\nnextTerm = t1 + t2;\nprintf (\"Enter the number of terms: \");\nscanf (\"%d\", &n);\nprintf (\"Fibonacci Series: %d, %d, \", t1, t2);\ni = 3;\ngoto <bb 4>; [INV]\n\n",
                "instructions": [
                    "t1 = 0;",
                    "t2 = 1;",
                    "nextTerm = t1 + t2;",
                    "printf (\"Enter the number of terms: \");",
                    "scanf (\"%d\", &n);",
                    "printf (\"Fibonacci Series: %d, %d, \", t1, t2);",
                    "i = 3;",
                    "goto <bb 4>; [INV]",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            },
            "main-6c193a21-bb-3": {
                "block_id": "main-6c193a21-bb-3",
                "block_code": "<bb 3> :\nprintf (\"%d, \", nextTerm);\nt1 = t2;\nt2 = nextTerm;\nnextTerm = t1 + t2;\ni = i + 1;\n\n",
                "instructions": [
                    "printf (\"%d, \", nextTerm);",
                    "t1 = t2;",
                    "t2 = nextTerm;",
                    "nextTerm = t1 + t2;",
                    "i = i + 1;",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            },
            "main-6c193a21-bb-4": {
                "block_id": "main-6c193a21-bb-4",
                "block_code": "<bb 4> :\nn.0_1 = n;\nif (i <= n.0_1)\ngoto <bb 3>; [INV]\nelse\ngoto <bb 5>; [INV]\n\n",
                "instructions": [
                    "n.0_1 = n;",
                    "if (i <= n.0_1)",
                    "goto <bb 3>; [INV]",
                    "else",
                    "goto <bb 5>; [INV]",
                    ""
                ],
                "contains_decision": true,
                "is_loop_header": true,
                "successors": []
            },
            "main-6c193a21-bb-5": {
                "block_id": "main-6c193a21-bb-5",
                "block_code": "<bb 5> :\nD.2356 = 0;\nn = {CLOBBER};\n\n",
                "instructions": [
                    "D.2356 = 0;",
                    "n = {CLOBBER};",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            },
            "main-6c193a21-bb-6": {
                "block_id": "main-6c193a21-bb-6",
                "block_code": "<bb 6> :\n<L4>:\nreturn D.2356;\n\n}\n\n\n",
                "instructions": [
                    "<L4>:",
                    "return D.2356;",
                    "",
                    "}",
                    "",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            }
        },
        "loops": [
            {
                "loop_id": "main-6c193a21-loop-0",
                "header": 0,
                "latch": null,
                "depth": 0,
                "nodes": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6
                ]
            },
            {
                "loop_id": "main-6c193a21-loop-1",
                "header": 4,
                "latch": null,
                "depth": 1,
                "nodes": [
                    4,
                    3
                ]
            }
        ],
        "decision_nodes": [
            {
                "decision_id": "main-6c193a21-decision-62f7c5ae",
                "block_id": "main-6c193a21-bb-4",
                "condition": "if (i <= n.0_1)",
                "true_target": null,
                "false_target": null
            }
        ],
        "edges": [
            {
                "from": "main-6c193a21-bb-2",
                "to": "main-6c193a21-bb-4"
            },
            {
                "from": "main-6c193a21-bb-3",
                "to": "main-6c193a21-bb-4"
            },
            {
                "from": "main-6c193a21-bb-4",
                "to": "main-6c193a21-bb-3"
            },
            {
                "from": "main-6c193a21-bb-4",
                "to": "main-6c193a21-bb-5"
            },
            {
                "from": "main-6c193a21-bb-5",
                "to": "main-6c193a21-bb-6"
            },
            {
                "from": "main-6c193a21-bb-6",
                "to": "main-6c193a21-bb-1"
            }
        ]
    },
    "/home/spire2/SPIRE_GLLeN/Neo4J/temp/hello_world.cfg": {
        "function_node": {
            "function_id": "main-e23d0e8c",
            "function_name": "main",
            "full_code": "\n;; Function main (main, funcdef_no=0, decl_uid=2344, cgraph_uid=1, symbol_order=0)\n\nRemoving basic block 3\n;; 1 loops found\n;;\n;; Loop 0\n;;  header 0, latch 1\n;;  depth 0, outer -1\n;;  nodes: 0 1 2 3\n;; 2 succs { 3 }\n;; 3 succs { 1 }\nint main ()\n{\nint D.2347;\n\n<bb 2> :\nprintf (\"Hello, World!\");\nD.2347 = 0;\n\n<bb 3> :\n<L0>:\nreturn D.2347;\n\n}\n\n\n"
        },
        "basic_blocks": {
            "main-e23d0e8c-bb-2": {
                "block_id": "main-e23d0e8c-bb-2",
                "block_code": "<bb 2> :\nprintf (\"Hello, World!\");\nD.2347 = 0;\n\n",
                "instructions": [
                    "printf (\"Hello, World!\");",
                    "D.2347 = 0;",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            },
            "main-e23d0e8c-bb-3": {
                "block_id": "main-e23d0e8c-bb-3",
                "block_code": "<bb 3> :\n<L0>:\nreturn D.2347;\n\n}\n\n\n",
                "instructions": [
                    "<L0>:",
                    "return D.2347;",
                    "",
                    "}",
                    "",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            }
        },
        "loops": [
            {
                "loop_id": "main-e23d0e8c-loop-0",
                "header": 0,
                "latch": null,
                "depth": 0,
                "nodes": [
                    0,
                    1,
                    2,
                    3
                ]
            }
        ],
        "decision_nodes": [],
        "edges": [
            {
                "from": "main-e23d0e8c-bb-2",
                "to": "main-e23d0e8c-bb-3"
            },
            {
                "from": "main-e23d0e8c-bb-3",
                "to": "main-e23d0e8c-bb-1"
            }
        ]
    },
    "/home/spire2/SPIRE_GLLeN/Neo4J/temp/recursive_factorial.cfg": {
        "function_node": {
            "function_id": "multiplyNumbers-625e1359",
            "function_name": "multiplyNumbers",
            "full_code": "\n;; Function main (main, funcdef_no=0, decl_uid=2346, cgraph_uid=1, symbol_order=0)\n\nRemoving basic block 4\nMerging blocks 2 and 3\n;; 1 loops found\n;;\n;; Loop 0\n;;  header 0, latch 1\n;;  depth 0, outer -1\n;;  nodes: 0 1 2 3\n;; 2 succs { 3 }\n;; 3 succs { 1 }\nint main ()\n{\nint n;\nint D.2353;\n\n<bb 2> :\nprintf (\"Enter a positive integer: \");\nscanf (\"%d\", &n);\nn.0_1 = n;\n_2 = multiplyNumbers (n.0_1);\nn.1_3 = n;\nprintf (\"Factorial of %d = %ld\", n.1_3, _2);\nD.2353 = 0;\nn = {CLOBBER};\n\n<bb 3> :\n<L1>:\nreturn D.2353;\n\n}\n\n\n\n;; Function multiplyNumbers (multiplyNumbers, funcdef_no=1, decl_uid=2345, cgraph_uid=2, symbol_order=1)\n\n;; 1 loops found\n;;\n;; Loop 0\n;;  header 0, latch 1\n;;  depth 0, outer -1\n;;  nodes: 0 1 2 3 4 5\n;; 2 succs { 3 4 }\n;; 3 succs { 5 }\n;; 4 succs { 5 }\n;; 5 succs { 1 }\nlong int multiplyNumbers (int n)\n{\nlong int D.2358;\n\n<bb 2> :\nif (n > 0)\ngoto <bb 3>; [INV]\nelse\ngoto <bb 4>; [INV]\n\n<bb 3> :\n_1 = (long int) n;\n_2 = n + -1;\n_3 = multiplyNumbers (_2);\nD.2358 = _1 * _3;\n// predicted unlikely by early return (on trees) predictor.\ngoto <bb 5>; [INV]\n\n<bb 4> :\nD.2358 = 1;\n// predicted unlikely by early return (on trees) predictor.\n\n<bb 5> :\n<L2>:\nreturn D.2358;\n\n}\n\n\n"
        },
        "basic_blocks": {
            "main-56e8e4e7-bb-2": {
                "block_id": "main-56e8e4e7-bb-2",
                "block_code": "<bb 2> :\nprintf (\"Enter a positive integer: \");\nscanf (\"%d\", &n);\nn.0_1 = n;\n_2 = multiplyNumbers (n.0_1);\nn.1_3 = n;\nprintf (\"Factorial of %d = %ld\", n.1_3, _2);\nD.2353 = 0;\nn = {CLOBBER};\n\n",
                "instructions": [
                    "printf (\"Enter a positive integer: \");",
                    "scanf (\"%d\", &n);",
                    "n.0_1 = n;",
                    "_2 = multiplyNumbers (n.0_1);",
                    "n.1_3 = n;",
                    "printf (\"Factorial of %d = %ld\", n.1_3, _2);",
                    "D.2353 = 0;",
                    "n = {CLOBBER};",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            },
            "main-56e8e4e7-bb-3": {
                "block_id": "main-56e8e4e7-bb-3",
                "block_code": "<bb 3> :\n<L1>:\nreturn D.2353;\n\n}\n\n\n\n\nlong int multiplyNumbers (int n)\n{\nlong int D.2358;\n\n",
                "instructions": [
                    "<L1>:",
                    "return D.2353;",
                    "",
                    "}",
                    "",
                    "",
                    "",
                    "",
                    "long int multiplyNumbers (int n)",
                    "{",
                    "long int D.2358;",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            },
            "multiplyNumbers-625e1359-bb-2": {
                "block_id": "multiplyNumbers-625e1359-bb-2",
                "block_code": "<bb 2> :\nif (n > 0)\ngoto <bb 3>; [INV]\nelse\ngoto <bb 4>; [INV]\n\n",
                "instructions": [
                    "if (n > 0)",
                    "goto <bb 3>; [INV]",
                    "else",
                    "goto <bb 4>; [INV]",
                    ""
                ],
                "contains_decision": true,
                "is_loop_header": false,
                "successors": []
            },
            "multiplyNumbers-625e1359-bb-3": {
                "block_id": "multiplyNumbers-625e1359-bb-3",
                "block_code": "<bb 3> :\n_1 = (long int) n;\n_2 = n + -1;\n_3 = multiplyNumbers (_2);\nD.2358 = _1 * _3;\n// predicted unlikely by early return (on trees) predictor.\ngoto <bb 5>; [INV]\n\n",
                "instructions": [
                    "_1 = (long int) n;",
                    "_2 = n + -1;",
                    "_3 = multiplyNumbers (_2);",
                    "D.2358 = _1 * _3;",
                    "// predicted unlikely by early return (on trees) predictor.",
                    "goto <bb 5>; [INV]",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            },
            "multiplyNumbers-625e1359-bb-4": {
                "block_id": "multiplyNumbers-625e1359-bb-4",
                "block_code": "<bb 4> :\nD.2358 = 1;\n// predicted unlikely by early return (on trees) predictor.\n\n",
                "instructions": [
                    "D.2358 = 1;",
                    "// predicted unlikely by early return (on trees) predictor.",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            },
            "multiplyNumbers-625e1359-bb-5": {
                "block_id": "multiplyNumbers-625e1359-bb-5",
                "block_code": "<bb 5> :\n<L2>:\nreturn D.2358;\n\n}\n\n\n",
                "instructions": [
                    "<L2>:",
                    "return D.2358;",
                    "",
                    "}",
                    "",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            }
        },
        "loops": [
            {
                "loop_id": "main-56e8e4e7-loop-0",
                "header": 0,
                "latch": null,
                "depth": 0,
                "nodes": [
                    0,
                    1,
                    2,
                    3
                ]
            },
            {
                "loop_id": "multiplyNumbers-625e1359-loop-0",
                "header": 0,
                "latch": null,
                "depth": 0,
                "nodes": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ]
            }
        ],
        "decision_nodes": [
            {
                "decision_id": "multiplyNumbers-625e1359-decision-06273615",
                "block_id": "multiplyNumbers-625e1359-bb-2",
                "condition": "if (n > 0)",
                "true_target": null,
                "false_target": null
            }
        ],
        "edges": [
            {
                "from": "main-56e8e4e7-bb-2",
                "to": "main-56e8e4e7-bb-3"
            },
            {
                "from": "main-56e8e4e7-bb-3",
                "to": "main-56e8e4e7-bb-1"
            },
            {
                "from": "multiplyNumbers-625e1359-bb-2",
                "to": "multiplyNumbers-625e1359-bb-3"
            },
            {
                "from": "multiplyNumbers-625e1359-bb-2",
                "to": "multiplyNumbers-625e1359-bb-4"
            },
            {
                "from": "multiplyNumbers-625e1359-bb-3",
                "to": "multiplyNumbers-625e1359-bb-5"
            },
            {
                "from": "multiplyNumbers-625e1359-bb-4",
                "to": "multiplyNumbers-625e1359-bb-5"
            },
            {
                "from": "multiplyNumbers-625e1359-bb-5",
                "to": "multiplyNumbers-625e1359-bb-1"
            }
        ]
    },
    "/home/spire2/SPIRE_GLLeN/Neo4J/temp/factorial.cfg": {
        "function_node": {
            "function_id": "main-8b39e7a2",
            "function_name": "main",
            "full_code": "\n;; Function main (main, funcdef_no=0, decl_uid=2344, cgraph_uid=1, symbol_order=0)\n\nRemoving basic block 10\nMerging blocks 8 and 9\n;; 2 loops found\n;;\n;; Loop 0\n;;  header 0, latch 1\n;;  depth 0, outer -1\n;;  nodes: 0 1 2 3 4 5 6 7 8 9\n;;\n;; Loop 1\n;;  header 6, latch 5\n;;  depth 1, outer 0\n;;  nodes: 6 5\n;; 2 succs { 3 4 }\n;; 3 succs { 8 }\n;; 4 succs { 6 }\n;; 5 succs { 6 }\n;; 6 succs { 5 7 }\n;; 7 succs { 8 }\n;; 8 succs { 9 }\n;; 9 succs { 1 }\nint main ()\n{\nlong long unsigned int fact;\nint i;\nint n;\nint D.2357;\n\n<bb 2> :\nfact = 1;\nprintf (\"Enter an integer: \");\nscanf (\"%d\", &n);\nn.0_1 = n;\nif (n.0_1 < 0)\ngoto <bb 3>; [INV]\nelse\ngoto <bb 4>; [INV]\n\n<bb 3> :\nprintf (\"Error! Factorial of a negative number doesn\\'t exist.\");\ngoto <bb 8>; [INV]\n\n<bb 4> :\ni = 1;\ngoto <bb 6>; [INV]\n\n<bb 5> :\n_2 = (long long unsigned int) i;\nfact = fact * _2;\ni = i + 1;\n\n<bb 6> :\nn.1_3 = n;\nif (i <= n.1_3)\ngoto <bb 5>; [INV]\nelse\ngoto <bb 7>; [INV]\n\n<bb 7> :\nn.2_4 = n;\nprintf (\"Factorial of %d = %llu\", n.2_4, fact);\n\n<bb 8> :\nD.2357 = 0;\nn = {CLOBBER};\n\n<bb 9> :\n<L7>:\nreturn D.2357;\n\n}\n\n\n"
        },
        "basic_blocks": {
            "main-8b39e7a2-bb-2": {
                "block_id": "main-8b39e7a2-bb-2",
                "block_code": "<bb 2> :\nfact = 1;\nprintf (\"Enter an integer: \");\nscanf (\"%d\", &n);\nn.0_1 = n;\nif (n.0_1 < 0)\ngoto <bb 3>; [INV]\nelse\ngoto <bb 4>; [INV]\n\n",
                "instructions": [
                    "fact = 1;",
                    "printf (\"Enter an integer: \");",
                    "scanf (\"%d\", &n);",
                    "n.0_1 = n;",
                    "if (n.0_1 < 0)",
                    "goto <bb 3>; [INV]",
                    "else",
                    "goto <bb 4>; [INV]",
                    ""
                ],
                "contains_decision": true,
                "is_loop_header": false,
                "successors": []
            },
            "main-8b39e7a2-bb-3": {
                "block_id": "main-8b39e7a2-bb-3",
                "block_code": "<bb 3> :\nprintf (\"Error! Factorial of a negative number doesn\\'t exist.\");\ngoto <bb 8>; [INV]\n\n",
                "instructions": [
                    "printf (\"Error! Factorial of a negative number doesn\\'t exist.\");",
                    "goto <bb 8>; [INV]",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            },
            "main-8b39e7a2-bb-4": {
                "block_id": "main-8b39e7a2-bb-4",
                "block_code": "<bb 4> :\ni = 1;\ngoto <bb 6>; [INV]\n\n",
                "instructions": [
                    "i = 1;",
                    "goto <bb 6>; [INV]",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            },
            "main-8b39e7a2-bb-5": {
                "block_id": "main-8b39e7a2-bb-5",
                "block_code": "<bb 5> :\n_2 = (long long unsigned int) i;\nfact = fact * _2;\ni = i + 1;\n\n",
                "instructions": [
                    "_2 = (long long unsigned int) i;",
                    "fact = fact * _2;",
                    "i = i + 1;",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            },
            "main-8b39e7a2-bb-6": {
                "block_id": "main-8b39e7a2-bb-6",
                "block_code": "<bb 6> :\nn.1_3 = n;\nif (i <= n.1_3)\ngoto <bb 5>; [INV]\nelse\ngoto <bb 7>; [INV]\n\n",
                "instructions": [
                    "n.1_3 = n;",
                    "if (i <= n.1_3)",
                    "goto <bb 5>; [INV]",
                    "else",
                    "goto <bb 7>; [INV]",
                    ""
                ],
                "contains_decision": true,
                "is_loop_header": true,
                "successors": []
            },
            "main-8b39e7a2-bb-7": {
                "block_id": "main-8b39e7a2-bb-7",
                "block_code": "<bb 7> :\nn.2_4 = n;\nprintf (\"Factorial of %d = %llu\", n.2_4, fact);\n\n",
                "instructions": [
                    "n.2_4 = n;",
                    "printf (\"Factorial of %d = %llu\", n.2_4, fact);",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            },
            "main-8b39e7a2-bb-8": {
                "block_id": "main-8b39e7a2-bb-8",
                "block_code": "<bb 8> :\nD.2357 = 0;\nn = {CLOBBER};\n\n",
                "instructions": [
                    "D.2357 = 0;",
                    "n = {CLOBBER};",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            },
            "main-8b39e7a2-bb-9": {
                "block_id": "main-8b39e7a2-bb-9",
                "block_code": "<bb 9> :\n<L7>:\nreturn D.2357;\n\n}\n\n\n",
                "instructions": [
                    "<L7>:",
                    "return D.2357;",
                    "",
                    "}",
                    "",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            }
        },
        "loops": [
            {
                "loop_id": "main-8b39e7a2-loop-0",
                "header": 0,
                "latch": null,
                "depth": 0,
                "nodes": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9
                ]
            },
            {
                "loop_id": "main-8b39e7a2-loop-1",
                "header": 6,
                "latch": null,
                "depth": 1,
                "nodes": [
                    6,
                    5
                ]
            }
        ],
        "decision_nodes": [
            {
                "decision_id": "main-8b39e7a2-decision-ce94a25d",
                "block_id": "main-8b39e7a2-bb-2",
                "condition": "if (n.0_1 < 0)",
                "true_target": null,
                "false_target": null
            },
            {
                "decision_id": "main-8b39e7a2-decision-8efbcb5f",
                "block_id": "main-8b39e7a2-bb-6",
                "condition": "if (i <= n.1_3)",
                "true_target": null,
                "false_target": null
            }
        ],
        "edges": [
            {
                "from": "main-8b39e7a2-bb-2",
                "to": "main-8b39e7a2-bb-3"
            },
            {
                "from": "main-8b39e7a2-bb-2",
                "to": "main-8b39e7a2-bb-4"
            },
            {
                "from": "main-8b39e7a2-bb-3",
                "to": "main-8b39e7a2-bb-8"
            },
            {
                "from": "main-8b39e7a2-bb-4",
                "to": "main-8b39e7a2-bb-6"
            },
            {
                "from": "main-8b39e7a2-bb-5",
                "to": "main-8b39e7a2-bb-6"
            },
            {
                "from": "main-8b39e7a2-bb-6",
                "to": "main-8b39e7a2-bb-5"
            },
            {
                "from": "main-8b39e7a2-bb-6",
                "to": "main-8b39e7a2-bb-7"
            },
            {
                "from": "main-8b39e7a2-bb-7",
                "to": "main-8b39e7a2-bb-8"
            },
            {
                "from": "main-8b39e7a2-bb-8",
                "to": "main-8b39e7a2-bb-9"
            },
            {
                "from": "main-8b39e7a2-bb-9",
                "to": "main-8b39e7a2-bb-1"
            }
        ]
    },
    "/home/spire2/SPIRE_GLLeN/Neo4J/temp/natural_sum_recursion.cfg": {
        "function_node": {
            "function_id": "addNumbers-da61a902",
            "function_name": "addNumbers",
            "full_code": "\n;; Function main (main, funcdef_no=0, decl_uid=2346, cgraph_uid=1, symbol_order=0)\n\nRemoving basic block 4\nMerging blocks 2 and 3\n;; 1 loops found\n;;\n;; Loop 0\n;;  header 0, latch 1\n;;  depth 0, outer -1\n;;  nodes: 0 1 2 3\n;; 2 succs { 3 }\n;; 3 succs { 1 }\nint main ()\n{\nint num;\nint D.2353;\n\n<bb 2> :\nprintf (\"Enter a positive integer: \");\nscanf (\"%d\", &num);\nnum.0_1 = num;\n_2 = addNumbers (num.0_1);\nprintf (\"Sum = %d\", _2);\nD.2353 = 0;\nnum = {CLOBBER};\n\n<bb 3> :\n<L1>:\nreturn D.2353;\n\n}\n\n\n\n;; Function addNumbers (addNumbers, funcdef_no=1, decl_uid=2345, cgraph_uid=2, symbol_order=1)\n\n;; 1 loops found\n;;\n;; Loop 0\n;;  header 0, latch 1\n;;  depth 0, outer -1\n;;  nodes: 0 1 2 3 4 5\n;; 2 succs { 3 4 }\n;; 3 succs { 5 }\n;; 4 succs { 5 }\n;; 5 succs { 1 }\nint addNumbers (int n)\n{\nint D.2358;\n\n<bb 2> :\nif (n != 0)\ngoto <bb 3>; [INV]\nelse\ngoto <bb 4>; [INV]\n\n<bb 3> :\n_1 = n + -1;\n_2 = addNumbers (_1);\nD.2358 = n + _2;\n// predicted unlikely by early return (on trees) predictor.\ngoto <bb 5>; [INV]\n\n<bb 4> :\nD.2358 = n;\n// predicted unlikely by early return (on trees) predictor.\n\n<bb 5> :\n<L2>:\nreturn D.2358;\n\n}\n\n\n"
        },
        "basic_blocks": {
            "main-a0cbfe76-bb-2": {
                "block_id": "main-a0cbfe76-bb-2",
                "block_code": "<bb 2> :\nprintf (\"Enter a positive integer: \");\nscanf (\"%d\", &num);\nnum.0_1 = num;\n_2 = addNumbers (num.0_1);\nprintf (\"Sum = %d\", _2);\nD.2353 = 0;\nnum = {CLOBBER};\n\n",
                "instructions": [
                    "printf (\"Enter a positive integer: \");",
                    "scanf (\"%d\", &num);",
                    "num.0_1 = num;",
                    "_2 = addNumbers (num.0_1);",
                    "printf (\"Sum = %d\", _2);",
                    "D.2353 = 0;",
                    "num = {CLOBBER};",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            },
            "main-a0cbfe76-bb-3": {
                "block_id": "main-a0cbfe76-bb-3",
                "block_code": "<bb 3> :\n<L1>:\nreturn D.2353;\n\n}\n\n\n\n\nint addNumbers (int n)\n{\nint D.2358;\n\n",
                "instructions": [
                    "<L1>:",
                    "return D.2353;",
                    "",
                    "}",
                    "",
                    "",
                    "",
                    "",
                    "int addNumbers (int n)",
                    "{",
                    "int D.2358;",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            },
            "addNumbers-da61a902-bb-2": {
                "block_id": "addNumbers-da61a902-bb-2",
                "block_code": "<bb 2> :\nif (n != 0)\ngoto <bb 3>; [INV]\nelse\ngoto <bb 4>; [INV]\n\n",
                "instructions": [
                    "if (n != 0)",
                    "goto <bb 3>; [INV]",
                    "else",
                    "goto <bb 4>; [INV]",
                    ""
                ],
                "contains_decision": true,
                "is_loop_header": false,
                "successors": []
            },
            "addNumbers-da61a902-bb-3": {
                "block_id": "addNumbers-da61a902-bb-3",
                "block_code": "<bb 3> :\n_1 = n + -1;\n_2 = addNumbers (_1);\nD.2358 = n + _2;\n// predicted unlikely by early return (on trees) predictor.\ngoto <bb 5>; [INV]\n\n",
                "instructions": [
                    "_1 = n + -1;",
                    "_2 = addNumbers (_1);",
                    "D.2358 = n + _2;",
                    "// predicted unlikely by early return (on trees) predictor.",
                    "goto <bb 5>; [INV]",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            },
            "addNumbers-da61a902-bb-4": {
                "block_id": "addNumbers-da61a902-bb-4",
                "block_code": "<bb 4> :\nD.2358 = n;\n// predicted unlikely by early return (on trees) predictor.\n\n",
                "instructions": [
                    "D.2358 = n;",
                    "// predicted unlikely by early return (on trees) predictor.",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            },
            "addNumbers-da61a902-bb-5": {
                "block_id": "addNumbers-da61a902-bb-5",
                "block_code": "<bb 5> :\n<L2>:\nreturn D.2358;\n\n}\n\n\n",
                "instructions": [
                    "<L2>:",
                    "return D.2358;",
                    "",
                    "}",
                    "",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            }
        },
        "loops": [
            {
                "loop_id": "main-a0cbfe76-loop-0",
                "header": 0,
                "latch": null,
                "depth": 0,
                "nodes": [
                    0,
                    1,
                    2,
                    3
                ]
            },
            {
                "loop_id": "addNumbers-da61a902-loop-0",
                "header": 0,
                "latch": null,
                "depth": 0,
                "nodes": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ]
            }
        ],
        "decision_nodes": [
            {
                "decision_id": "addNumbers-da61a902-decision-0a1377bc",
                "block_id": "addNumbers-da61a902-bb-2",
                "condition": "if (n != 0)",
                "true_target": null,
                "false_target": null
            }
        ],
        "edges": [
            {
                "from": "main-a0cbfe76-bb-2",
                "to": "main-a0cbfe76-bb-3"
            },
            {
                "from": "main-a0cbfe76-bb-3",
                "to": "main-a0cbfe76-bb-1"
            },
            {
                "from": "addNumbers-da61a902-bb-2",
                "to": "addNumbers-da61a902-bb-3"
            },
            {
                "from": "addNumbers-da61a902-bb-2",
                "to": "addNumbers-da61a902-bb-4"
            },
            {
                "from": "addNumbers-da61a902-bb-3",
                "to": "addNumbers-da61a902-bb-5"
            },
            {
                "from": "addNumbers-da61a902-bb-4",
                "to": "addNumbers-da61a902-bb-5"
            },
            {
                "from": "addNumbers-da61a902-bb-5",
                "to": "addNumbers-da61a902-bb-1"
            }
        ]
    },
    "/home/spire2/SPIRE_GLLeN/Neo4J/temp/floating_mult.cfg": {
        "function_node": {
            "function_id": "main-ee48a80c",
            "function_name": "main",
            "full_code": "\n;; Function main (main, funcdef_no=0, decl_uid=2344, cgraph_uid=1, symbol_order=0)\n\nRemoving basic block 4\nMerging blocks 2 and 3\n;; 1 loops found\n;;\n;; Loop 0\n;;  header 0, latch 1\n;;  depth 0, outer -1\n;;  nodes: 0 1 2 3\n;; 2 succs { 3 }\n;; 3 succs { 1 }\nint main ()\n{\ndouble product;\ndouble b;\ndouble a;\nint D.2350;\n\n<bb 2> :\nprintf (\"Enter two numbers: \");\nscanf (\"%lf %lf\", &a, &b);\na.0_1 = a;\nb.1_2 = b;\nproduct = a.0_1 * b.1_2;\nprintf (\"Product = %.2lf\", product);\nD.2350 = 0;\na = {CLOBBER};\nb = {CLOBBER};\n\n<bb 3> :\n<L1>:\nreturn D.2350;\n\n}\n\n\n"
        },
        "basic_blocks": {
            "main-ee48a80c-bb-2": {
                "block_id": "main-ee48a80c-bb-2",
                "block_code": "<bb 2> :\nprintf (\"Enter two numbers: \");\nscanf (\"%lf %lf\", &a, &b);\na.0_1 = a;\nb.1_2 = b;\nproduct = a.0_1 * b.1_2;\nprintf (\"Product = %.2lf\", product);\nD.2350 = 0;\na = {CLOBBER};\nb = {CLOBBER};\n\n",
                "instructions": [
                    "printf (\"Enter two numbers: \");",
                    "scanf (\"%lf %lf\", &a, &b);",
                    "a.0_1 = a;",
                    "b.1_2 = b;",
                    "product = a.0_1 * b.1_2;",
                    "printf (\"Product = %.2lf\", product);",
                    "D.2350 = 0;",
                    "a = {CLOBBER};",
                    "b = {CLOBBER};",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            },
            "main-ee48a80c-bb-3": {
                "block_id": "main-ee48a80c-bb-3",
                "block_code": "<bb 3> :\n<L1>:\nreturn D.2350;\n\n}\n\n\n",
                "instructions": [
                    "<L1>:",
                    "return D.2350;",
                    "",
                    "}",
                    "",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            }
        },
        "loops": [
            {
                "loop_id": "main-ee48a80c-loop-0",
                "header": 0,
                "latch": null,
                "depth": 0,
                "nodes": [
                    0,
                    1,
                    2,
                    3
                ]
            }
        ],
        "decision_nodes": [],
        "edges": [
            {
                "from": "main-ee48a80c-bb-2",
                "to": "main-ee48a80c-bb-3"
            },
            {
                "from": "main-ee48a80c-bb-3",
                "to": "main-ee48a80c-bb-1"
            }
        ]
    },
    "/home/spire2/SPIRE_GLLeN/Neo4J/temp/num_swap.cfg": {
        "function_node": {
            "function_id": "main-ffac0442",
            "function_name": "main",
            "full_code": "\n;; Function main (main, funcdef_no=0, decl_uid=2344, cgraph_uid=1, symbol_order=0)\n\nRemoving basic block 4\nMerging blocks 2 and 3\n;; 1 loops found\n;;\n;; Loop 0\n;;  header 0, latch 1\n;;  depth 0, outer -1\n;;  nodes: 0 1 2 3\n;; 2 succs { 3 }\n;; 3 succs { 1 }\nint main ()\n{\ndouble temp;\ndouble second;\ndouble first;\nint D.2350;\n\n<bb 2> :\nprintf (\"Enter first number: \");\nscanf (\"%lf\", &first);\nprintf (\"Enter second number: \");\nscanf (\"%lf\", &second);\ntemp = first;\nsecond.0_1 = second;\nfirst = second.0_1;\nsecond = temp;\nfirst.1_2 = first;\nprintf (\"\\nAfter swapping, first number = %.2lf\\n\", first.1_2);\nsecond.2_3 = second;\nprintf (\"After swapping, second number = %.2lf\", second.2_3);\nD.2350 = 0;\nfirst = {CLOBBER};\nsecond = {CLOBBER};\n\n<bb 3> :\n<L1>:\nreturn D.2350;\n\n}\n\n\n"
        },
        "basic_blocks": {
            "main-ffac0442-bb-2": {
                "block_id": "main-ffac0442-bb-2",
                "block_code": "<bb 2> :\nprintf (\"Enter first number: \");\nscanf (\"%lf\", &first);\nprintf (\"Enter second number: \");\nscanf (\"%lf\", &second);\ntemp = first;\nsecond.0_1 = second;\nfirst = second.0_1;\nsecond = temp;\nfirst.1_2 = first;\nprintf (\"\\nAfter swapping, first number = %.2lf\\n\", first.1_2);\nsecond.2_3 = second;\nprintf (\"After swapping, second number = %.2lf\", second.2_3);\nD.2350 = 0;\nfirst = {CLOBBER};\nsecond = {CLOBBER};\n\n",
                "instructions": [
                    "printf (\"Enter first number: \");",
                    "scanf (\"%lf\", &first);",
                    "printf (\"Enter second number: \");",
                    "scanf (\"%lf\", &second);",
                    "temp = first;",
                    "second.0_1 = second;",
                    "first = second.0_1;",
                    "second = temp;",
                    "first.1_2 = first;",
                    "printf (\"\\nAfter swapping, first number = %.2lf\\n\", first.1_2);",
                    "second.2_3 = second;",
                    "printf (\"After swapping, second number = %.2lf\", second.2_3);",
                    "D.2350 = 0;",
                    "first = {CLOBBER};",
                    "second = {CLOBBER};",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            },
            "main-ffac0442-bb-3": {
                "block_id": "main-ffac0442-bb-3",
                "block_code": "<bb 3> :\n<L1>:\nreturn D.2350;\n\n}\n\n\n",
                "instructions": [
                    "<L1>:",
                    "return D.2350;",
                    "",
                    "}",
                    "",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            }
        },
        "loops": [
            {
                "loop_id": "main-ffac0442-loop-0",
                "header": 0,
                "latch": null,
                "depth": 0,
                "nodes": [
                    0,
                    1,
                    2,
                    3
                ]
            }
        ],
        "decision_nodes": [],
        "edges": [
            {
                "from": "main-ffac0442-bb-2",
                "to": "main-ffac0442-bb-3"
            },
            {
                "from": "main-ffac0442-bb-3",
                "to": "main-ffac0442-bb-1"
            }
        ]
    },
    "/home/spire2/SPIRE_GLLeN/Neo4J/temp/quadratic_roots.cfg": {
        "function_node": {
            "function_id": "main-8e4667fc",
            "function_name": "main",
            "full_code": "\n;; Function main (main, funcdef_no=0, decl_uid=3397, cgraph_uid=1, symbol_order=0)\n\nRemoving basic block 9\nMerging blocks 7 and 8\n;; 1 loops found\n;;\n;; Loop 0\n;;  header 0, latch 1\n;;  depth 0, outer -1\n;;  nodes: 0 1 2 3 4 5 6 7 8\n;; 2 succs { 3 4 }\n;; 3 succs { 7 }\n;; 4 succs { 5 6 }\n;; 5 succs { 7 }\n;; 6 succs { 7 }\n;; 7 succs { 8 }\n;; 8 succs { 1 }\nint main ()\n{\ndouble imagPart;\ndouble realPart;\ndouble root2;\ndouble root1;\ndouble discriminant;\ndouble c;\ndouble b;\ndouble a;\nint D.3414;\n\n<bb 2> :\nprintf (\"Enter coefficients a, b and c: \");\nscanf (\"%lf %lf %lf\", &a, &b, &c);\nb.0_1 = b;\nb.1_2 = b;\n_3 = b.0_1 * b.1_2;\na.2_4 = a;\n_5 = a.2_4 * 4.0e+0;\nc.3_6 = c;\n_7 = _5 * c.3_6;\ndiscriminant = _3 - _7;\nif (discriminant > 0.0)\ngoto <bb 3>; [INV]\nelse\ngoto <bb 4>; [INV]\n\n<bb 3> :\n_8 = sqrt (discriminant);\nb.4_9 = b;\n_10 = _8 - b.4_9;\na.5_11 = a;\n_12 = a.5_11 * 2.0e+0;\nroot1 = _10 / _12;\nb.6_13 = b;\n_14 = -b.6_13;\n_15 = sqrt (discriminant);\n_16 = _14 - _15;\na.7_17 = a;\n_18 = a.7_17 * 2.0e+0;\nroot2 = _16 / _18;\nprintf (\"root1 = %.2lf and root2 = %.2lf\", root1, root2);\ngoto <bb 7>; [INV]\n\n<bb 4> :\nif (discriminant == 0.0)\ngoto <bb 5>; [INV]\nelse\ngoto <bb 6>; [INV]\n\n<bb 5> :\nb.8_19 = b;\n_20 = -b.8_19;\na.9_21 = a;\n_22 = a.9_21 * 2.0e+0;\nroot2 = _20 / _22;\nroot1 = root2;\nprintf (\"root1 = root2 = %.2lf;\", root1);\ngoto <bb 7>; [INV]\n\n<bb 6> :\nb.10_23 = b;\n_24 = -b.10_23;\na.11_25 = a;\n_26 = a.11_25 * 2.0e+0;\nrealPart = _24 / _26;\n_27 = -discriminant;\n_28 = sqrt (_27);\na.12_29 = a;\n_30 = a.12_29 * 2.0e+0;\nimagPart = _28 / _30;\nprintf (\"root1 = %.2lf+%.2lfi and root2 = %.2f-%.2fi\", realPart, imagPart, realPart, imagPart);\n\n<bb 7> :\nD.3414 = 0;\na = {CLOBBER};\nb = {CLOBBER};\nc = {CLOBBER};\n\n<bb 8> :\n<L7>:\nreturn D.3414;\n\n}\n\n\n"
        },
        "basic_blocks": {
            "main-8e4667fc-bb-2": {
                "block_id": "main-8e4667fc-bb-2",
                "block_code": "<bb 2> :\nprintf (\"Enter coefficients a, b and c: \");\nscanf (\"%lf %lf %lf\", &a, &b, &c);\nb.0_1 = b;\nb.1_2 = b;\n_3 = b.0_1 * b.1_2;\na.2_4 = a;\n_5 = a.2_4 * 4.0e+0;\nc.3_6 = c;\n_7 = _5 * c.3_6;\ndiscriminant = _3 - _7;\nif (discriminant > 0.0)\ngoto <bb 3>; [INV]\nelse\ngoto <bb 4>; [INV]\n\n",
                "instructions": [
                    "printf (\"Enter coefficients a, b and c: \");",
                    "scanf (\"%lf %lf %lf\", &a, &b, &c);",
                    "b.0_1 = b;",
                    "b.1_2 = b;",
                    "_3 = b.0_1 * b.1_2;",
                    "a.2_4 = a;",
                    "_5 = a.2_4 * 4.0e+0;",
                    "c.3_6 = c;",
                    "_7 = _5 * c.3_6;",
                    "discriminant = _3 - _7;",
                    "if (discriminant > 0.0)",
                    "goto <bb 3>; [INV]",
                    "else",
                    "goto <bb 4>; [INV]",
                    ""
                ],
                "contains_decision": true,
                "is_loop_header": false,
                "successors": []
            },
            "main-8e4667fc-bb-3": {
                "block_id": "main-8e4667fc-bb-3",
                "block_code": "<bb 3> :\n_8 = sqrt (discriminant);\nb.4_9 = b;\n_10 = _8 - b.4_9;\na.5_11 = a;\n_12 = a.5_11 * 2.0e+0;\nroot1 = _10 / _12;\nb.6_13 = b;\n_14 = -b.6_13;\n_15 = sqrt (discriminant);\n_16 = _14 - _15;\na.7_17 = a;\n_18 = a.7_17 * 2.0e+0;\nroot2 = _16 / _18;\nprintf (\"root1 = %.2lf and root2 = %.2lf\", root1, root2);\ngoto <bb 7>; [INV]\n\n",
                "instructions": [
                    "_8 = sqrt (discriminant);",
                    "b.4_9 = b;",
                    "_10 = _8 - b.4_9;",
                    "a.5_11 = a;",
                    "_12 = a.5_11 * 2.0e+0;",
                    "root1 = _10 / _12;",
                    "b.6_13 = b;",
                    "_14 = -b.6_13;",
                    "_15 = sqrt (discriminant);",
                    "_16 = _14 - _15;",
                    "a.7_17 = a;",
                    "_18 = a.7_17 * 2.0e+0;",
                    "root2 = _16 / _18;",
                    "printf (\"root1 = %.2lf and root2 = %.2lf\", root1, root2);",
                    "goto <bb 7>; [INV]",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            },
            "main-8e4667fc-bb-4": {
                "block_id": "main-8e4667fc-bb-4",
                "block_code": "<bb 4> :\nif (discriminant == 0.0)\ngoto <bb 5>; [INV]\nelse\ngoto <bb 6>; [INV]\n\n",
                "instructions": [
                    "if (discriminant == 0.0)",
                    "goto <bb 5>; [INV]",
                    "else",
                    "goto <bb 6>; [INV]",
                    ""
                ],
                "contains_decision": true,
                "is_loop_header": false,
                "successors": []
            },
            "main-8e4667fc-bb-5": {
                "block_id": "main-8e4667fc-bb-5",
                "block_code": "<bb 5> :\nb.8_19 = b;\n_20 = -b.8_19;\na.9_21 = a;\n_22 = a.9_21 * 2.0e+0;\nroot2 = _20 / _22;\nroot1 = root2;\nprintf (\"root1 = root2 = %.2lf;\", root1);\ngoto <bb 7>; [INV]\n\n",
                "instructions": [
                    "b.8_19 = b;",
                    "_20 = -b.8_19;",
                    "a.9_21 = a;",
                    "_22 = a.9_21 * 2.0e+0;",
                    "root2 = _20 / _22;",
                    "root1 = root2;",
                    "printf (\"root1 = root2 = %.2lf;\", root1);",
                    "goto <bb 7>; [INV]",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            },
            "main-8e4667fc-bb-6": {
                "block_id": "main-8e4667fc-bb-6",
                "block_code": "<bb 6> :\nb.10_23 = b;\n_24 = -b.10_23;\na.11_25 = a;\n_26 = a.11_25 * 2.0e+0;\nrealPart = _24 / _26;\n_27 = -discriminant;\n_28 = sqrt (_27);\na.12_29 = a;\n_30 = a.12_29 * 2.0e+0;\nimagPart = _28 / _30;\nprintf (\"root1 = %.2lf+%.2lfi and root2 = %.2f-%.2fi\", realPart, imagPart, realPart, imagPart);\n\n",
                "instructions": [
                    "b.10_23 = b;",
                    "_24 = -b.10_23;",
                    "a.11_25 = a;",
                    "_26 = a.11_25 * 2.0e+0;",
                    "realPart = _24 / _26;",
                    "_27 = -discriminant;",
                    "_28 = sqrt (_27);",
                    "a.12_29 = a;",
                    "_30 = a.12_29 * 2.0e+0;",
                    "imagPart = _28 / _30;",
                    "printf (\"root1 = %.2lf+%.2lfi and root2 = %.2f-%.2fi\", realPart, imagPart, realPart, imagPart);",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            },
            "main-8e4667fc-bb-7": {
                "block_id": "main-8e4667fc-bb-7",
                "block_code": "<bb 7> :\nD.3414 = 0;\na = {CLOBBER};\nb = {CLOBBER};\nc = {CLOBBER};\n\n",
                "instructions": [
                    "D.3414 = 0;",
                    "a = {CLOBBER};",
                    "b = {CLOBBER};",
                    "c = {CLOBBER};",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            },
            "main-8e4667fc-bb-8": {
                "block_id": "main-8e4667fc-bb-8",
                "block_code": "<bb 8> :\n<L7>:\nreturn D.3414;\n\n}\n\n\n",
                "instructions": [
                    "<L7>:",
                    "return D.3414;",
                    "",
                    "}",
                    "",
                    ""
                ],
                "contains_decision": false,
                "is_loop_header": false,
                "successors": []
            }
        },
        "loops": [
            {
                "loop_id": "main-8e4667fc-loop-0",
                "header": 0,
                "latch": null,
                "depth": 0,
                "nodes": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8
                ]
            }
        ],
        "decision_nodes": [
            {
                "decision_id": "main-8e4667fc-decision-a415b4f2",
                "block_id": "main-8e4667fc-bb-2",
                "condition": "if (discriminant > 0.0)",
                "true_target": null,
                "false_target": null
            },
            {
                "decision_id": "main-8e4667fc-decision-deec0c22",
                "block_id": "main-8e4667fc-bb-4",
                "condition": "if (discriminant == 0.0)",
                "true_target": null,
                "false_target": null
            }
        ],
        "edges": [
            {
                "from": "main-8e4667fc-bb-2",
                "to": "main-8e4667fc-bb-3"
            },
            {
                "from": "main-8e4667fc-bb-2",
                "to": "main-8e4667fc-bb-4"
            },
            {
                "from": "main-8e4667fc-bb-3",
                "to": "main-8e4667fc-bb-7"
            },
            {
                "from": "main-8e4667fc-bb-4",
                "to": "main-8e4667fc-bb-5"
            },
            {
                "from": "main-8e4667fc-bb-4",
                "to": "main-8e4667fc-bb-6"
            },
            {
                "from": "main-8e4667fc-bb-5",
                "to": "main-8e4667fc-bb-7"
            },
            {
                "from": "main-8e4667fc-bb-6",
                "to": "main-8e4667fc-bb-7"
            },
            {
                "from": "main-8e4667fc-bb-7",
                "to": "main-8e4667fc-bb-8"
            },
            {
                "from": "main-8e4667fc-bb-8",
                "to": "main-8e4667fc-bb-1"
            }
        ]
    }
}