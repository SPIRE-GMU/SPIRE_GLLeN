
;; Function upzero (upzero, funcdef_no=0, decl_uid=1945, cgraph_uid=1, symbol_order=0)

Removing basic block 6
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;;
;; Loop 2
;;  header 5, latch 4
;;  depth 1, outer 0
;;  nodes: 5 4
;;
;; Loop 1
;;  header 11, latch 10
;;  depth 1, outer 0
;;  nodes: 11 10 8 9 7
;; 2 succs { 3 6 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 4 12 }
;; 6 succs { 11 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 7 12 }
;; 12 succs { 1 }
void upzero (int dlt, int * dlti, int * bli)
{
  int wd3;
  int wd2;
  int i;

  <bb 2> :
  if (dlt == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  i = 0;
  goto <bb 5>; [INV]

  <bb 4> :
  _1 = (long unsigned int) i;
  _2 = _1 * 4;
  _3 = bli + _2;
  _4 = *_3;
  _5 = (long int) _4;
  _6 = _5 * 255;
  _7 = _6 >> 8;
  _8 = (long unsigned int) i;
  _9 = _8 * 4;
  _10 = bli + _9;
  _11 = (int) _7;
  *_10 = _11;
  i = i + 1;

  <bb 5> :
  if (i <= 5)
    goto <bb 4>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 6> :
  i = 0;
  goto <bb 11>; [INV]

  <bb 7> :
  _12 = (long int) dlt;
  _13 = (long unsigned int) i;
  _14 = _13 * 4;
  _15 = dlti + _14;
  _16 = *_15;
  _17 = (long int) _16;
  _18 = _12 * _17;
  if (_18 >= 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  wd2 = 128;
  goto <bb 10>; [INV]

  <bb 9> :
  wd2 = -128;

  <bb 10> :
  _19 = (long unsigned int) i;
  _20 = _19 * 4;
  _21 = bli + _20;
  _22 = *_21;
  _23 = (long int) _22;
  _24 = _23 * 255;
  _25 = _24 >> 8;
  wd3 = (int) _25;
  _26 = (long unsigned int) i;
  _27 = _26 * 4;
  _28 = bli + _27;
  _29 = wd2 + wd3;
  *_28 = _29;
  i = i + 1;

  <bb 11> :
  if (i <= 5)
    goto <bb 7>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  _30 = dlti + 20;
  _31 = MEM[(int *)dlti + 16B];
  *_30 = _31;
  _32 = dlti + 16;
  _33 = MEM[(int *)dlti + 12B];
  *_32 = _33;
  _34 = dlti + 12;
  _35 = MEM[(int *)dlti + 8B];
  *_34 = _35;
  _36 = dlti + 8;
  _37 = MEM[(int *)dlti + 4B];
  *_36 = _37;
  _38 = dlti + 4;
  _39 = *dlti;
  *_38 = _39;
  *dlti = dlt;
  return;

}


