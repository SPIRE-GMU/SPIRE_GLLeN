
;; Function wordsnum (wordsnum, funcdef_no=0, decl_uid=1945, cgraph_uid=1, symbol_order=0)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 7, multiple latches: 4 5 6
;;  depth 1, outer 0
;;  nodes: 7 4 5 6 3 8
;; 2 succs { 7 }
;; 3 succs { 5 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 3 9 }
;; 9 succs { 10 }
;; 10 succs { 1 }
int wordsnum (const char * s, int * l, char c)
{
  int words;
  int D.1958;

  <bb 2> :
  *l = -1;
  words = 0;
  goto <bb 7>; [INV]

  <bb 3> :
  _1 = *l;
  if (_1 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _2 = *l;
  _3 = (sizetype) _2;
  _4 = _3 + 18446744073709551615;
  _5 = s + _4;
  _6 = *_5;
  if (c == _6)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _7 = *l;
  _8 = (sizetype) _7;
  _9 = s + _8;
  _10 = *_9;
  if (c != _10)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  words = words + 1;

  <bb 7> :
  if (s != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _11 = *l;
  _12 = _11 + 1;
  *l = _12;
  _13 = *l;
  _14 = (sizetype) _13;
  _15 = s + _14;
  _16 = *_15;
  if (_16 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  D.1958 = words;

  <bb 10> :
<L9>:
  return D.1958;

}


