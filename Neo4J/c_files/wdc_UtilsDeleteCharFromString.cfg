
;; Function wdc_UtilsDeleteCharFromString (wdc_UtilsDeleteCharFromString, funcdef_no=0, decl_uid=1945, cgraph_uid=1, symbol_order=0)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;;
;; Loop 1
;;  header 9, latch 8
;;  depth 1, outer 0
;;  nodes: 9 8 6 7 10
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 12 }
;; 5 succs { 9 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 10 11 }
;; 10 succs { 6 11 }
;; 11 succs { 12 }
;; 12 succs { 1 }
void wdc_UtilsDeleteCharFromString (char * buffer, int buffSize, char charToRemove)
{
  int count;
  int i;

  <bb 2> :
  i = 0;
  count = 0;
  if (buffer == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  if (buffSize == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 12>; [INV]

  <bb 5> :
  i = 0;
  goto <bb 9>; [INV]

  <bb 6> :
  _1 = (sizetype) i;
  _2 = buffer + _1;
  _3 = *_2;
  if (charToRemove != _3)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _4 = (sizetype) i;
  _5 = buffer + _4;
  count.0_6 = count;
  count = count.0_6 + 1;
  _7 = (sizetype) count.0_6;
  _8 = buffer + _7;
  _9 = *_5;
  *_8 = _9;

  <bb 8> :
  i = i + 1;

  <bb 9> :
  if (i < buffSize)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _10 = (sizetype) i;
  _11 = buffer + _10;
  _12 = *_11;
  if (_12 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _13 = (sizetype) count;
  _14 = buffer + _13;
  *_14 = 0;

  <bb 12> :
<L9>:
  return;

}


