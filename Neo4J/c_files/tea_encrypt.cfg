
;; Function tea_encrypt (tea_encrypt, funcdef_no=0, decl_uid=1944, cgraph_uid=1, symbol_order=0)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void tea_encrypt (long unsigned int * v, long unsigned int * k)
{
  long unsigned int k3;
  long unsigned int k2;
  long unsigned int k1;
  long unsigned int k0;
  long unsigned int delta;
  long unsigned int i;
  long unsigned int sum;
  long unsigned int v1;
  long unsigned int v0;

  <bb 2> :
  v0 = *v;
  v1 = MEM[(long unsigned int *)v + 8B];
  sum = 0;
  delta = 2654435769;
  k0 = *k;
  k1 = MEM[(long unsigned int *)k + 8B];
  k2 = MEM[(long unsigned int *)k + 16B];
  k3 = MEM[(long unsigned int *)k + 24B];
  i = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  sum = sum + delta;
  _1 = v1 << 4;
  _2 = k0 + _1;
  _3 = v1 + sum;
  _4 = _2 ^ _3;
  _5 = v1 >> 5;
  _6 = k1 + _5;
  _7 = _4 ^ _6;
  v0 = v0 + _7;
  _8 = v0 << 4;
  _9 = k2 + _8;
  _10 = v0 + sum;
  _11 = _9 ^ _10;
  _12 = v0 >> 5;
  _13 = k3 + _12;
  _14 = _11 ^ _13;
  v1 = v1 + _14;
  i = i + 1;

  <bb 4> :
  if (i <= 31)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  *v = v0;
  _15 = v + 8;
  *_15 = v1;
  return;

}


