
;; Function transform_range_vertex (transform_range_vertex, funcdef_no=0, decl_uid=1944, cgraph_uid=1, symbol_order=0)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
__attribute__((access ("^0[6]^1[24]", )))
void transform_range_vertex (double * range, double * vertex)
{
  <bb 2> :
  _1 = vertex + 72;
  _2 = *range;
  *_1 = _2;
  _3 = vertex + 168;
  _4 = *_1;
  *_3 = _4;
  _5 = vertex + 96;
  _6 = *_3;
  *_5 = _6;
  _7 = *_5;
  *vertex = _7;
  _8 = vertex + 48;
  _9 = MEM[(double *)range + 8B];
  *_8 = _9;
  _10 = vertex + 144;
  _11 = *_8;
  *_10 = _11;
  _12 = vertex + 120;
  _13 = *_10;
  *_12 = _13;
  _14 = vertex + 24;
  _15 = *_12;
  *_14 = _15;
  _16 = vertex + 104;
  _17 = MEM[(double *)range + 16B];
  *_16 = _17;
  _18 = vertex + 128;
  _19 = *_16;
  *_18 = _19;
  _20 = vertex + 32;
  _21 = *_18;
  *_20 = _21;
  _22 = vertex + 8;
  _23 = *_20;
  *_22 = _23;
  _24 = vertex + 176;
  _25 = MEM[(double *)range + 24B];
  *_24 = _25;
  _26 = vertex + 152;
  _27 = *_24;
  *_26 = _27;
  _28 = vertex + 56;
  _29 = *_26;
  *_28 = _29;
  _30 = vertex + 80;
  _31 = *_28;
  *_30 = _31;
  _32 = vertex + 88;
  _33 = MEM[(double *)range + 32B];
  *_32 = _33;
  _34 = vertex + 64;
  _35 = *_32;
  *_34 = _35;
  _36 = vertex + 40;
  _37 = *_34;
  *_36 = _37;
  _38 = vertex + 16;
  _39 = *_36;
  *_38 = _39;
  _40 = vertex + 184;
  _41 = MEM[(double *)range + 40B];
  *_40 = _41;
  _42 = vertex + 160;
  _43 = *_40;
  *_42 = _43;
  _44 = vertex + 136;
  _45 = *_42;
  *_44 = _45;
  _46 = vertex + 112;
  _47 = *_44;
  *_46 = _47;

  <bb 3> :
<L0>:
  return;

}


