
;; Function VectorCrossProduct (VectorCrossProduct, funcdef_no=0, decl_uid=1945, cgraph_uid=1, symbol_order=0)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
__attribute__((access ("^0[3]^1[3]^2[3]", )))
void VectorCrossProduct (float * pfVectorOut, float * pfVectorIn1, float * pfVectorIn2)
{
  <bb 2> :
  _1 = pfVectorIn1 + 4;
  _2 = *_1;
  _3 = pfVectorIn2 + 8;
  _4 = *_3;
  _5 = _2 * _4;
  _6 = pfVectorIn1 + 8;
  _7 = *_6;
  _8 = pfVectorIn2 + 4;
  _9 = *_8;
  _10 = _7 * _9;
  _11 = _5 - _10;
  *pfVectorOut = _11;
  _12 = pfVectorIn1 + 8;
  _13 = *_12;
  _14 = *pfVectorIn2;
  _15 = _13 * _14;
  _16 = *pfVectorIn1;
  _17 = pfVectorIn2 + 8;
  _18 = *_17;
  _19 = _16 * _18;
  _20 = pfVectorOut + 4;
  _21 = _15 - _19;
  *_20 = _21;
  _22 = *pfVectorIn1;
  _23 = pfVectorIn2 + 4;
  _24 = *_23;
  _25 = _22 * _24;
  _26 = pfVectorIn1 + 4;
  _27 = *_26;
  _28 = *pfVectorIn2;
  _29 = _27 * _28;
  _30 = pfVectorOut + 8;
  _31 = _25 - _29;
  *_30 = _31;
  return;

}


