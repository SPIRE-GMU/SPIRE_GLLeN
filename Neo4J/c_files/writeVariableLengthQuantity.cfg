
;; Function writeVariableLengthQuantity (writeVariableLengthQuantity, funcdef_no=0, decl_uid=1944, cgraph_uid=1, symbol_order=0)

;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
;;
;; Loop 2
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 11 12 10
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 5
;; 2 succs { 3 4 }
;; 3 succs { 16 }
;; 4 succs { 8 }
;; 5 succs { 6 7 }
;; 6 succs { 9 }
;; 7 succs { 8 }
;; 8 succs { 5 9 }
;; 9 succs { 14 }
;; 10 succs { 11 12 }
;; 11 succs { 13 }
;; 12 succs { 13 }
;; 13 succs { 14 }
;; 14 succs { 10 15 }
;; 15 succs { 16 }
;; 16 succs { 1 }
int writeVariableLengthQuantity (char * outputPtr, int input)
{
  int i;
  int i;
  int length;
  int D.1960;

  <bb 2> :
  if (input == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  *outputPtr = 0;
  D.1960 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 16>; [INV]

  <bb 4> :
  length = 5;
  i = 4;
  goto <bb 8>; [INV]

  <bb 5> :
  _1 = i * 7;
  _2 = input >> _1;
  if (_2 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  goto <bb 9>; [INV]

  <bb 7> :
  length = length + -1;
  i = i + -1;

  <bb 8> :
  if (i >= 0)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  i = length + -1;
  goto <bb 14>; [INV]

  <bb 10> :
  if (i != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _3 = i * 7;
  _4 = input >> _3;
  _5 = (unsigned char) _4;
  _6 = _5 & 127;
  _7 = _6 + 128;
  _8 = (sizetype) length;
  _9 = (sizetype) i;
  _10 = _8 - _9;
  _11 = _10 + 18446744073709551615;
  _12 = outputPtr + _11;
  _13 = (char) _7;
  *_12 = _13;
  goto <bb 13>; [INV]

  <bb 12> :
  _14 = i * 7;
  _15 = input >> _14;
  _16 = (char) _15;
  _17 = (sizetype) length;
  _18 = (sizetype) i;
  _19 = _17 - _18;
  _20 = _19 + 18446744073709551615;
  _21 = outputPtr + _20;
  _22 = _16 & 127;
  *_21 = _22;

  <bb 13> :
  i = i + -1;

  <bb 14> :
  if (i >= 0)
    goto <bb 10>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  D.1960 = length;

  <bb 16> :
<L13>:
  return D.1960;

}


