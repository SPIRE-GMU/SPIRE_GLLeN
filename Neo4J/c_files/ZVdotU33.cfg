
;; Function ZVdotU33 (ZVdotU33, funcdef_no=0, decl_uid=1950, cgraph_uid=1, symbol_order=0)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
__attribute__((access ("^1[ ]^2[ ]^3[ ]^4[ ]^5[ ]^6[ ]^7[ ]", )))
void ZVdotU33 (int n, double * y0, double * y1, double * y2, double * x0, double * x1, double * x2, double * sums)
{
  int rloc;
  int iloc;
  int ii;
  double yr2;
  double yr1;
  double yr0;
  double yi2;
  double yi1;
  double yi0;
  double xr2;
  double xr1;
  double xr0;
  double xi2;
  double xi1;
  double xi0;
  double r22;
  double r21;
  double r20;
  double r12;
  double r11;
  double r10;
  double r02;
  double r01;
  double r00;
  double i22;
  double i21;
  double i20;
  double i12;
  double i11;
  double i10;
  double i02;
  double i01;
  double i00;

  <bb 2> :
  r22 = 0.0;
  r21 = r22;
  r20 = r21;
  r12 = r20;
  r11 = r12;
  r10 = r11;
  r02 = r10;
  r01 = r02;
  r00 = r01;
  i22 = r00;
  i21 = i22;
  i20 = i21;
  i12 = i20;
  i11 = i12;
  i10 = i11;
  i02 = i10;
  i01 = i02;
  i00 = i01;
  rloc = 0;
  ii = rloc;
  iloc = 1;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = (long unsigned int) rloc;
  _2 = _1 * 8;
  _3 = y0 + _2;
  yr0 = *_3;
  _4 = (long unsigned int) iloc;
  _5 = _4 * 8;
  _6 = y0 + _5;
  yi0 = *_6;
  _7 = (long unsigned int) rloc;
  _8 = _7 * 8;
  _9 = y1 + _8;
  yr1 = *_9;
  _10 = (long unsigned int) iloc;
  _11 = _10 * 8;
  _12 = y1 + _11;
  yi1 = *_12;
  _13 = (long unsigned int) rloc;
  _14 = _13 * 8;
  _15 = y2 + _14;
  yr2 = *_15;
  _16 = (long unsigned int) iloc;
  _17 = _16 * 8;
  _18 = y2 + _17;
  yi2 = *_18;
  _19 = (long unsigned int) rloc;
  _20 = _19 * 8;
  _21 = x0 + _20;
  xr0 = *_21;
  _22 = (long unsigned int) iloc;
  _23 = _22 * 8;
  _24 = x0 + _23;
  xi0 = *_24;
  _25 = (long unsigned int) rloc;
  _26 = _25 * 8;
  _27 = x1 + _26;
  xr1 = *_27;
  _28 = (long unsigned int) iloc;
  _29 = _28 * 8;
  _30 = x1 + _29;
  xi1 = *_30;
  _31 = (long unsigned int) rloc;
  _32 = _31 * 8;
  _33 = x2 + _32;
  xr2 = *_33;
  _34 = (long unsigned int) iloc;
  _35 = _34 * 8;
  _36 = x2 + _35;
  xi2 = *_36;
  _37 = yr0 * xr0;
  _38 = yi0 * xi0;
  _39 = _37 - _38;
  r00 = r00 + _39;
  _40 = yr0 * xi0;
  _41 = yi0 * xr0;
  _42 = _40 + _41;
  i00 = i00 + _42;
  _43 = yr0 * xr1;
  _44 = yi0 * xi1;
  _45 = _43 - _44;
  r01 = r01 + _45;
  _46 = yr0 * xi1;
  _47 = yi0 * xr1;
  _48 = _46 + _47;
  i01 = i01 + _48;
  _49 = yr0 * xr2;
  _50 = yi0 * xi2;
  _51 = _49 - _50;
  r02 = r02 + _51;
  _52 = yr0 * xi2;
  _53 = yi0 * xr2;
  _54 = _52 + _53;
  i02 = i02 + _54;
  _55 = yr1 * xr0;
  _56 = yi1 * xi0;
  _57 = _55 - _56;
  r10 = r10 + _57;
  _58 = yr1 * xi0;
  _59 = yi1 * xr0;
  _60 = _58 + _59;
  i10 = i10 + _60;
  _61 = yr1 * xr1;
  _62 = yi1 * xi1;
  _63 = _61 - _62;
  r11 = r11 + _63;
  _64 = yr1 * xi1;
  _65 = yi1 * xr1;
  _66 = _64 + _65;
  i11 = i11 + _66;
  _67 = yr1 * xr2;
  _68 = yi1 * xi2;
  _69 = _67 - _68;
  r12 = r12 + _69;
  _70 = yr1 * xi2;
  _71 = yi1 * xr2;
  _72 = _70 + _71;
  i12 = i12 + _72;
  _73 = yr2 * xr0;
  _74 = yi2 * xi0;
  _75 = _73 - _74;
  r20 = r20 + _75;
  _76 = yr2 * xi0;
  _77 = yi2 * xr0;
  _78 = _76 + _77;
  i20 = i20 + _78;
  _79 = yr2 * xr1;
  _80 = yi2 * xi1;
  _81 = _79 - _80;
  r21 = r21 + _81;
  _82 = yr2 * xi1;
  _83 = yi2 * xr1;
  _84 = _82 + _83;
  i21 = i21 + _84;
  _85 = yr2 * xr2;
  _86 = yi2 * xi2;
  _87 = _85 - _86;
  r22 = r22 + _87;
  _88 = yr2 * xi2;
  _89 = yi2 * xr2;
  _90 = _88 + _89;
  i22 = i22 + _90;
  ii = ii + 1;
  rloc = rloc + 2;
  iloc = iloc + 2;

  <bb 4> :
  if (ii < n)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  *sums = r00;
  _91 = sums + 8;
  *_91 = i00;
  _92 = sums + 16;
  *_92 = r01;
  _93 = sums + 24;
  *_93 = i01;
  _94 = sums + 32;
  *_94 = r02;
  _95 = sums + 40;
  *_95 = i02;
  _96 = sums + 48;
  *_96 = r10;
  _97 = sums + 56;
  *_97 = i10;
  _98 = sums + 64;
  *_98 = r11;
  _99 = sums + 72;
  *_99 = i11;
  _100 = sums + 80;
  *_100 = r12;
  _101 = sums + 88;
  *_101 = i12;
  _102 = sums + 96;
  *_102 = r20;
  _103 = sums + 104;
  *_103 = i20;
  _104 = sums + 112;
  *_104 = r21;
  _105 = sums + 120;
  *_105 = i21;
  _106 = sums + 128;
  *_106 = r22;
  _107 = sums + 136;
  *_107 = i22;

  <bb 6> :
<L3>:
  return;

}


