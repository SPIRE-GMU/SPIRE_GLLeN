
;; Function to_utf8 (to_utf8, funcdef_no=0, decl_uid=1944, cgraph_uid=1, symbol_order=0)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { 8 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
int to_utf8 (char * utfbuffer, unsigned int uc)
{
  int count;
  int D.1954;

  <bb 2> :
  count = 0;
  if (uc <= 127)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = (char) uc;
  *utfbuffer = _1;
  count = 1;
  goto <bb 8>; [INV]

  <bb 4> :
  if (uc <= 2047)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _2 = uc >> 6;
  _3 = (unsigned char) _2;
  _4 = _3 | 192;
  count.0_5 = count;
  count = count.0_5 + 1;
  _6 = (sizetype) count.0_5;
  _7 = utfbuffer + _6;
  _8 = (char) _4;
  *_7 = _8;
  goto <bb 7>; [INV]

  <bb 6> :
  _9 = uc >> 12;
  _10 = (unsigned char) _9;
  _11 = _10 | 224;
  count.1_12 = count;
  count = count.1_12 + 1;
  _13 = (sizetype) count.1_12;
  _14 = utfbuffer + _13;
  _15 = (char) _11;
  *_14 = _15;
  _16 = uc >> 6;
  _17 = (unsigned char) _16;
  _18 = _17 & 63;
  _19 = _18 | 128;
  count.2_20 = count;
  count = count.2_20 + 1;
  _21 = (sizetype) count.2_20;
  _22 = utfbuffer + _21;
  _23 = (char) _19;
  *_22 = _23;

  <bb 7> :
  _24 = (unsigned char) uc;
  _25 = _24 & 63;
  _26 = _25 | 128;
  count.3_27 = count;
  count = count.3_27 + 1;
  _28 = (sizetype) count.3_27;
  _29 = utfbuffer + _28;
  _30 = (char) _26;
  *_29 = _30;

  <bb 8> :
  _31 = (sizetype) count;
  _32 = utfbuffer + _31;
  *_32 = 0;
  D.1954 = count;

  <bb 9> :
<L6>:
  return D.1954;

}


