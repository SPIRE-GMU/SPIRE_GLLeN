
;; Function un_zig_zag (un_zig_zag, funcdef_no=0, decl_uid=1943, cgraph_uid=1, symbol_order=0)

;; 6 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
;;
;; Loop 2
;;  header 18, latch 17
;;  depth 1, outer 0
;;  nodes: 18 17 16 14 15
;;
;; Loop 3
;;  header 16, latch 15
;;  depth 2, outer 2
;;  nodes: 16 15
;;
;; Loop 1
;;  header 12, latch 11
;;  depth 1, outer 0
;;  nodes: 12 11 10 3 9 8 4 7 5 6
;;
;; Loop 4
;;  header 10, latch 9
;;  depth 2, outer 1
;;  nodes: 10 9 8 4 7 5 6
;;
;; Loop 5
;;  header 8, latch 7
;;  depth 3, outer 4
;;  nodes: 8 7 5 6
;; 2 succs { 12 }
;; 3 succs { 10 }
;; 4 succs { 8 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 5 9 }
;; 9 succs { 10 }
;; 10 succs { 4 11 }
;; 11 succs { 12 }
;; 12 succs { 3 13 }
;; 13 succs { 18 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 15 17 }
;; 17 succs { 18 }
;; 18 succs { 14 19 }
;; 19 succs { 1 }
__attribute__((access ("^0[8]", )))
void un_zig_zag (int[8] * quant_coefficient_matrix)
{
  int zz_order[64];
  int temp_matrix[8][8];
  int h;
  int j;
  int i;

  <bb 2> :
  zz_order[0] = 0;
  zz_order[1] = 1;
  zz_order[2] = 8;
  zz_order[3] = 16;
  zz_order[4] = 9;
  zz_order[5] = 2;
  zz_order[6] = 3;
  zz_order[7] = 10;
  zz_order[8] = 17;
  zz_order[9] = 24;
  zz_order[10] = 32;
  zz_order[11] = 25;
  zz_order[12] = 18;
  zz_order[13] = 11;
  zz_order[14] = 4;
  zz_order[15] = 5;
  zz_order[16] = 12;
  zz_order[17] = 19;
  zz_order[18] = 26;
  zz_order[19] = 33;
  zz_order[20] = 40;
  zz_order[21] = 48;
  zz_order[22] = 41;
  zz_order[23] = 34;
  zz_order[24] = 27;
  zz_order[25] = 20;
  zz_order[26] = 13;
  zz_order[27] = 6;
  zz_order[28] = 7;
  zz_order[29] = 14;
  zz_order[30] = 21;
  zz_order[31] = 28;
  zz_order[32] = 35;
  zz_order[33] = 42;
  zz_order[34] = 49;
  zz_order[35] = 56;
  zz_order[36] = 57;
  zz_order[37] = 50;
  zz_order[38] = 43;
  zz_order[39] = 36;
  zz_order[40] = 29;
  zz_order[41] = 22;
  zz_order[42] = 15;
  zz_order[43] = 23;
  zz_order[44] = 30;
  zz_order[45] = 37;
  zz_order[46] = 44;
  zz_order[47] = 51;
  zz_order[48] = 58;
  zz_order[49] = 59;
  zz_order[50] = 52;
  zz_order[51] = 45;
  zz_order[52] = 38;
  zz_order[53] = 31;
  zz_order[54] = 39;
  zz_order[55] = 46;
  zz_order[56] = 53;
  zz_order[57] = 60;
  zz_order[58] = 61;
  zz_order[59] = 54;
  zz_order[60] = 47;
  zz_order[61] = 55;
  zz_order[62] = 62;
  zz_order[63] = 63;
  h = 0;
  goto <bb 12>; [INV]

  <bb 3> :
  i = 0;
  goto <bb 10>; [INV]

  <bb 4> :
  j = 0;
  goto <bb 8>; [INV]

  <bb 5> :
  _1 = i * 8;
  _2 = j + _1;
  _3 = zz_order[h];
  if (_2 == _3)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _4 = h / 8;
  _5 = (long unsigned int) _4;
  _6 = _5 * 32;
  _7 = quant_coefficient_matrix + _6;
  _8 = h % 8;
  _9 = (*_7)[_8];
  temp_matrix[i][j] = _9;

  <bb 7> :
  j = j + 1;

  <bb 8> :
  if (j <= 7)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  i = i + 1;

  <bb 10> :
  if (i <= 7)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  h = h + 1;

  <bb 12> :
  if (h <= 63)
    goto <bb 3>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  i = 0;
  goto <bb 18>; [INV]

  <bb 14> :
  j = 0;
  goto <bb 16>; [INV]

  <bb 15> :
  _10 = (long unsigned int) i;
  _11 = _10 * 32;
  _12 = quant_coefficient_matrix + _11;
  _13 = temp_matrix[i][j];
  (*_12)[j] = _13;
  j = j + 1;

  <bb 16> :
  if (j <= 7)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  i = i + 1;

  <bb 18> :
  if (i <= 7)
    goto <bb 14>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  temp_matrix = {CLOBBER};
  zz_order = {CLOBBER};
  return;

}


