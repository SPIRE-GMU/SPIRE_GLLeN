
;; Function ZVdotU13 (ZVdotU13, funcdef_no=0, decl_uid=1948, cgraph_uid=1, symbol_order=0)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
__attribute__((access ("^1[ ]^2[ ]^3[ ]^4[ ]^5[ ]", )))
void ZVdotU13 (int n, double * y0, double * x0, double * x1, double * x2, double * sums)
{
  int rloc;
  int iloc;
  int ii;
  double yr0;
  double yi0;
  double xr2;
  double xr1;
  double xr0;
  double xi2;
  double xi1;
  double xi0;
  double r02;
  double r01;
  double r00;
  double i02;
  double i01;
  double i00;

  <bb 2> :
  r02 = 0.0;
  r01 = r02;
  r00 = r01;
  i02 = r00;
  i01 = i02;
  i00 = i01;
  rloc = 0;
  ii = rloc;
  iloc = 1;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = (long unsigned int) rloc;
  _2 = _1 * 8;
  _3 = y0 + _2;
  yr0 = *_3;
  _4 = (long unsigned int) iloc;
  _5 = _4 * 8;
  _6 = y0 + _5;
  yi0 = *_6;
  _7 = (long unsigned int) rloc;
  _8 = _7 * 8;
  _9 = x0 + _8;
  xr0 = *_9;
  _10 = (long unsigned int) iloc;
  _11 = _10 * 8;
  _12 = x0 + _11;
  xi0 = *_12;
  _13 = (long unsigned int) rloc;
  _14 = _13 * 8;
  _15 = x1 + _14;
  xr1 = *_15;
  _16 = (long unsigned int) iloc;
  _17 = _16 * 8;
  _18 = x1 + _17;
  xi1 = *_18;
  _19 = (long unsigned int) rloc;
  _20 = _19 * 8;
  _21 = x2 + _20;
  xr2 = *_21;
  _22 = (long unsigned int) iloc;
  _23 = _22 * 8;
  _24 = x2 + _23;
  xi2 = *_24;
  _25 = yr0 * xr0;
  _26 = yi0 * xi0;
  _27 = _25 - _26;
  r00 = r00 + _27;
  _28 = yr0 * xi0;
  _29 = yi0 * xr0;
  _30 = _28 + _29;
  i00 = i00 + _30;
  _31 = yr0 * xr1;
  _32 = yi0 * xi1;
  _33 = _31 - _32;
  r01 = r01 + _33;
  _34 = yr0 * xi1;
  _35 = yi0 * xr1;
  _36 = _34 + _35;
  i01 = i01 + _36;
  _37 = yr0 * xr2;
  _38 = yi0 * xi2;
  _39 = _37 - _38;
  r02 = r02 + _39;
  _40 = yr0 * xi2;
  _41 = yi0 * xr2;
  _42 = _40 + _41;
  i02 = i02 + _42;
  ii = ii + 1;
  rloc = rloc + 2;
  iloc = iloc + 2;

  <bb 4> :
  if (ii < n)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  *sums = r00;
  _43 = sums + 8;
  *_43 = i00;
  _44 = sums + 16;
  *_44 = r01;
  _45 = sums + 24;
  *_45 = i01;
  _46 = sums + 32;
  *_46 = r02;
  _47 = sums + 40;
  *_47 = i02;

  <bb 6> :
<L3>:
  return;

}


