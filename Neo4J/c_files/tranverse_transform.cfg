
;; Function tranverse_transform (tranverse_transform, funcdef_no=0, decl_uid=1946, cgraph_uid=1, symbol_order=0)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
__attribute__((access ("^0[3]^1[3]^2[3]^3[3]", )))
void tranverse_transform (double * screen_point, double * point_s, double[3] * inv_matrix, double * point_o)
{
  double zz;
  double yy;
  double xx;
  int i;

  <bb 2> :
  xx = *point_s;
  yy = MEM[(double *)point_s + 8B];
  zz = MEM[(double *)point_s + 16B];
  _1 = (*inv_matrix)[0];
  _2 = xx * _1;
  _3 = inv_matrix + 24;
  _4 = (*_3)[0];
  _5 = yy * _4;
  _6 = _2 + _5;
  _7 = inv_matrix + 48;
  _8 = (*_7)[0];
  _9 = zz * _8;
  _10 = _6 + _9;
  *point_o = _10;
  _11 = (*inv_matrix)[1];
  _12 = xx * _11;
  _13 = inv_matrix + 24;
  _14 = (*_13)[1];
  _15 = yy * _14;
  _16 = _12 + _15;
  _17 = inv_matrix + 48;
  _18 = (*_17)[1];
  _19 = zz * _18;
  _20 = point_o + 8;
  _21 = _16 + _19;
  *_20 = _21;
  _22 = (*inv_matrix)[2];
  _23 = xx * _22;
  _24 = inv_matrix + 24;
  _25 = (*_24)[2];
  _26 = yy * _25;
  _27 = _23 + _26;
  _28 = inv_matrix + 48;
  _29 = (*_28)[2];
  _30 = zz * _29;
  _31 = point_o + 16;
  _32 = _27 + _30;
  *_31 = _32;
  i = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  _33 = (long unsigned int) i;
  _34 = _33 * 8;
  _35 = point_o + _34;
  _36 = *_35;
  _37 = (long unsigned int) i;
  _38 = _37 * 8;
  _39 = screen_point + _38;
  _40 = *_39;
  _41 = (long unsigned int) i;
  _42 = _41 * 8;
  _43 = point_o + _42;
  _44 = _36 + _40;
  *_43 = _44;
  i = i + 1;

  <bb 4> :
  if (i <= 2)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :

  <bb 6> :
<L3>:
  return;

}


